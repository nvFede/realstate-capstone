// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require("Verifier");

contract("SquareVerifier Test", (accounts) => {
  const ACCOUNT_ONE = accounts[0];
  // - use the contents from proof.json generated from zokrates steps
  const jproof = require("./proof.json");

  let contract;

  beforeEach(async function () {
    contract = await SquareVerifier.new({ from: ACCOUNT_ONE });
  });

  // Test verification with correct proof
  it("test verification with correct proof", async function () {
    
    const {
      proof: { a, b, c },
    } = jproof;

    let result = await contract.verifyTx.call(a, b, c, jproof.inputs);

    
    assert.equal(result, true, "test verification with correct proof.");
  });

  // Test verification with incorrect proof
  it("test verification with incorrect proof", async function () {
    const {
      proof: { a, b, c },
    } = jproof;

    let result = await contract.verifyTx.call(a, b, c, [100, 100]);
    assert.equal(result, false, "test verification with incorrect proof.");
  });
});
